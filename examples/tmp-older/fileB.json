{
    "plus_succ": {
        "Sigma": [
            "Kind nat      type",
            "Type zero     nat",
            "Type succ     nat -> nat",
            "Define nat : nat -> prop by nat zero ; nat (succ N) := nat N"
        ],
        "conclusion": "forall M N K, plus M N K -> plus M (s N) (s K)",
        "lemmas": [
            []
        ]
    },
    "plus_comm": {
        "Sigma": [
            "Kind nat      type",
            "Type zero     nat",
            "Type succ     nat -> nat",
            "Define nat : nat -> prop by nat zero ; nat (succ N) := nat N"
        ],
        "conclusion": "forall M N K, nat K -> plus M N K -> plus N M K",
        "lemmas": [
            [
                "ipfs:bafyreid6ivhia73vhfaclmii23orwsdrhngt3d646wmcp6opup5vqhqvru",
                "plus_succ"
            ]
        ]
    }
}