{
    "output-for": "bafyreidbqnvtc7dtlgq35bfbqgzrfcdjv5bjlbggpjochw5xaf7ip6ipha",
    "format": "sequence",
    "name": "fileA",
    "assertions": [
        {
            "agent": "7cf08de215f3b292d4c65956a4a74cb0dd8a8bc60029bf541b508a7f2bd45825",
            "conclusion": "bafyreic3j4uvpbde6cnz45rfkddvlvlf7go3qrs5lolvaunbfjtrrhgq3e",
            "lemmas": []
        }
    ],
    "named-formulas": {
        "bafyreic3j4uvpbde6cnz45rfkddvlvlf7go3qrs5lolvaunbfjtrrhgq3e": {
            "name": "plus_zero",
            "cid-formula": "bafyreihls7tvg44v3emagqfc2fpgx27hvnnxgi3lyqxtvj67cgug7cxihe",
            "language": "ipfs:bafkreibczlhu5a6tyibqpwvuuaaqga7njlyyn5v37qttyapzjpwbidcjvq",
            "content": "forall N, nat N -> plus N z N",
            "declaration": "bafyreicrz3krx25vwkd6v2ucbiw75oaktshb66fx2eovrxlfr3eyhbnpqa"
        }
    },
    "declarations": {
        "bafyreicrz3krx25vwkd6v2ucbiw75oaktshb66fx2eovrxlfr3eyhbnpqa": {
            "language": "ipfs:bafkreibczlhu5a6tyibqpwvuuaaqga7njlyyn5v37qttyapzjpwbidcjvq",
            "content": [
                "Kind nat      type",
                "Type zero     nat",
                "Type succ     nat -> nat",
                "Define nat : nat -> prop by nat zero ; nat (succ N) := nat N",
                "Define plus : nat -> nat -> nat -> prop by plus z N N ; plus (s M) N (s K) := plus M N K"
            ]
        }
    }
}