Specification "nat".

Import "defnat".

% Subtraction
Define sub : nat -> nat -> nat -> prop by
  sub N z N := nat N;
  sub (s N1) (s N2) N3 := sub N1 N2 N3.

% Remainder: mod N M = R
Define mod : nat -> nat -> nat -> prop by
  mod N M N := lt N M;
  mod N M R := exists N', sub N M N' /\ mod N' M R.

% Euclid's Algorithm: gcd N M = D (including gcd z z = z)
Define gcd : nat -> nat -> nat -> prop by
  gcd N z N;
  gcd N (s M) D := exists R, mod N (s M) R /\ gcd (s M) R D.