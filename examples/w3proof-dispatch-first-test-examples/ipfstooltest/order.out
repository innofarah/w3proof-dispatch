Welcome to Abella 2.0.8-dev.
Abella < Import "basic".
Importing from "basic".

Abella < Define less : nat -> nat -> prop by 
less z (s N);
less (s N) (s M) := less N M.

Abella < Define greater : nat -> nat -> prop by 
greater (s N) z;
greater (s N) (s M) := greater N M.

Abella < Theorem greater_less : 
forall N M, greater N M -> less M N.


============================
 forall N M, greater N M -> less M N

greater_less < induction on 1.

IH : forall N M, greater N M * -> less M N
============================
 forall N M, greater N M @ -> less M N

greater_less < intros.

Variables: N M
IH : forall N M, greater N M * -> less M N
H1 : greater N M @
============================
 less M N

greater_less < case H1.
Subgoal 1:

Variables: N1
IH : forall N M, greater N M * -> less M N
============================
 less z (s N1)

Subgoal 2 is:
 less (s M1) (s N1)

greater_less < search.
Subgoal 2:

Variables: M1 N1
IH : forall N M, greater N M * -> less M N
H2 : greater N1 M1 *
============================
 less (s M1) (s N1)

greater_less < apply IH to H2.
Subgoal 2:

Variables: M1 N1
IH : forall N M, greater N M * -> less M N
H2 : greater N1 M1 *
H3 : less M1 N1
============================
 less (s M1) (s N1)

greater_less < search.
Proof completed.
Abella < Theorem less_greater : 
forall N M, less N M -> greater M N.


============================
 forall N M, less N M -> greater M N

less_greater < induction on 1.

IH : forall N M, less N M * -> greater M N
============================
 forall N M, less N M @ -> greater M N

less_greater < intros.

Variables: N M
IH : forall N M, less N M * -> greater M N
H1 : less N M @
============================
 greater M N

less_greater < case H1.
Subgoal 1:

Variables: N1
IH : forall N M, less N M * -> greater M N
============================
 greater (s N1) z

Subgoal 2 is:
 greater (s M1) (s N1)

less_greater < search.
Subgoal 2:

Variables: M1 N1
IH : forall N M, less N M * -> greater M N
H2 : less N1 M1 *
============================
 greater (s M1) (s N1)

less_greater < apply IH to H2.
Subgoal 2:

Variables: M1 N1
IH : forall N M, less N M * -> greater M N
H2 : less N1 M1 *
H3 : greater M1 N1
============================
 greater (s M1) (s N1)

less_greater < search.
Proof completed.
Abella < Theorem simple_less : 
forall N, nat N -> less N (s N).


============================
 forall N, nat N -> less N (s N)

simple_less < induction on 1.

IH : forall N, nat N * -> less N (s N)
============================
 forall N, nat N @ -> less N (s N)

simple_less < intros.

Variables: N
IH : forall N, nat N * -> less N (s N)
H1 : nat N @
============================
 less N (s N)

simple_less < case H1.
Subgoal 1:

IH : forall N, nat N * -> less N (s N)
============================
 less z (s z)

Subgoal 2 is:
 less (s N1) (s (s N1))

simple_less < search.
Subgoal 2:

Variables: N1
IH : forall N, nat N * -> less N (s N)
H2 : nat N1 *
============================
 less (s N1) (s (s N1))

simple_less < apply IH to H2.
Subgoal 2:

Variables: N1
IH : forall N, nat N * -> less N (s N)
H2 : nat N1 *
H3 : less N1 (s N1)
============================
 less (s N1) (s (s N1))

simple_less < search.
Proof completed.
Abella < Theorem succ_greater : 
forall N, nat N -> greater (s N) N.


============================
 forall N, nat N -> greater (s N) N

succ_greater < induction on 1.

IH : forall N, nat N * -> greater (s N) N
============================
 forall N, nat N @ -> greater (s N) N

succ_greater < intros.

Variables: N
IH : forall N, nat N * -> greater (s N) N
H1 : nat N @
============================
 greater (s N) N

succ_greater < case H1.
Subgoal 1:

IH : forall N, nat N * -> greater (s N) N
============================
 greater (s z) z

Subgoal 2 is:
 greater (s (s N1)) (s N1)

succ_greater < search.
Subgoal 2:

Variables: N1
IH : forall N, nat N * -> greater (s N) N
H2 : nat N1 *
============================
 greater (s (s N1)) (s N1)

succ_greater < apply IH to H2.
Subgoal 2:

Variables: N1
IH : forall N, nat N * -> greater (s N) N
H2 : nat N1 *
H3 : greater (s N1) N1
============================
 greater (s (s N1)) (s N1)

succ_greater < search.
Proof completed.
Abella < Theorem greater_greater : 
forall N M, nat M -> greater N (s M) -> greater N M.


============================
 forall N M, nat M -> greater N (s M) -> greater N M

greater_greater < induction on 1.

IH : forall N M, nat M * -> greater N (s M) -> greater N M
============================
 forall N M, nat M @ -> greater N (s M) -> greater N M

greater_greater < intros.

Variables: N M
IH : forall N M, nat M * -> greater N (s M) -> greater N M
H1 : nat M @
H2 : greater N (s M)
============================
 greater N M

greater_greater < case H1.
Subgoal 1:

Variables: N
IH : forall N M, nat M * -> greater N (s M) -> greater N M
H2 : greater N (s z)
============================
 greater N z

Subgoal 2 is:
 greater N (s N1)

greater_greater < case H2.
Subgoal 1:

Variables: N1
IH : forall N M, nat M * -> greater N (s M) -> greater N M
H3 : greater N1 z
============================
 greater (s N1) z

Subgoal 2 is:
 greater N (s N1)

greater_greater < case H3.
Subgoal 1:

Variables: N2
IH : forall N M, nat M * -> greater N (s M) -> greater N M
============================
 greater (s (s N2)) z

Subgoal 2 is:
 greater N (s N1)

greater_greater < search.
Subgoal 2:

Variables: N N1
IH : forall N M, nat M * -> greater N (s M) -> greater N M
H2 : greater N (s (s N1))
H3 : nat N1 *
============================
 greater N (s N1)

greater_greater < case H2.
Subgoal 2:

Variables: N1 N2
IH : forall N M, nat M * -> greater N (s M) -> greater N M
H3 : nat N1 *
H4 : greater N2 (s N1)
============================
 greater (s N2) (s N1)

greater_greater < apply IH to H3 H4.
Subgoal 2:

Variables: N1 N2
IH : forall N M, nat M * -> greater N (s M) -> greater N M
H3 : nat N1 *
H4 : greater N2 (s N1)
H5 : greater N2 N1
============================
 greater (s N2) (s N1)

greater_greater < search.
Proof completed.
Abella < Theorem greater_succ : 
forall N M, nat N -> nat M -> greater N M -> N = s M \/ greater N (s M).


============================
 forall N M, nat N -> nat M -> greater N M -> N = s M \/ greater N (s M)

greater_succ < induction on 2.

IH : forall N M, nat N -> nat M * -> greater N M -> N = s M \/
       greater N (s M)
============================
 forall N M, nat N -> nat M @ -> greater N M -> N = s M \/ greater N (s M)

greater_succ < intros.

Variables: N M
IH : forall N M, nat N -> nat M * -> greater N M -> N = s M \/
       greater N (s M)
H1 : nat N
H2 : nat M @
H3 : greater N M
============================
 N = s M \/ greater N (s M)

greater_succ < case H2.
Subgoal 1:

Variables: N
IH : forall N M, nat N -> nat M * -> greater N M -> N = s M \/
       greater N (s M)
H1 : nat N
H3 : greater N z
============================
 N = s z \/ greater N (s z)

Subgoal 2 is:
 N = s (s N1) \/ greater N (s (s N1))

greater_succ < case H3.
Subgoal 1:

Variables: N1
IH : forall N M, nat N -> nat M * -> greater N M -> N = s M \/
       greater N (s M)
H1 : nat (s N1)
============================
 s N1 = s z \/ greater (s N1) (s z)

Subgoal 2 is:
 N = s (s N1) \/ greater N (s (s N1))

greater_succ < case H1.
Subgoal 1:

Variables: N1
IH : forall N M, nat N -> nat M * -> greater N M -> N = s M \/
       greater N (s M)
H4 : nat N1
============================
 s N1 = s z \/ greater (s N1) (s z)

Subgoal 2 is:
 N = s (s N1) \/ greater N (s (s N1))

greater_succ < case H4.
Subgoal 1.1:

IH : forall N M, nat N -> nat M * -> greater N M -> N = s M \/
       greater N (s M)
============================
 s z = s z \/ greater (s z) (s z)

Subgoal 1.2 is:
 s (s N2) = s z \/ greater (s (s N2)) (s z)

Subgoal 2 is:
 N = s (s N1) \/ greater N (s (s N1))

greater_succ < search.
Subgoal 1.2:

Variables: N2
IH : forall N M, nat N -> nat M * -> greater N M -> N = s M \/
       greater N (s M)
H5 : nat N2
============================
 s (s N2) = s z \/ greater (s (s N2)) (s z)

Subgoal 2 is:
 N = s (s N1) \/ greater N (s (s N1))

greater_succ < search.
Subgoal 2:

Variables: N N1
IH : forall N M, nat N -> nat M * -> greater N M -> N = s M \/
       greater N (s M)
H1 : nat N
H3 : greater N (s N1)
H4 : nat N1 *
============================
 N = s (s N1) \/ greater N (s (s N1))

greater_succ < case H3.
Subgoal 2:

Variables: N1 N2
IH : forall N M, nat N -> nat M * -> greater N M -> N = s M \/
       greater N (s M)
H1 : nat (s N2)
H4 : nat N1 *
H5 : greater N2 N1
============================
 s N2 = s (s N1) \/ greater (s N2) (s (s N1))

greater_succ < case H1.
Subgoal 2:

Variables: N1 N2
IH : forall N M, nat N -> nat M * -> greater N M -> N = s M \/
       greater N (s M)
H4 : nat N1 *
H5 : greater N2 N1
H6 : nat N2
============================
 s N2 = s (s N1) \/ greater (s N2) (s (s N1))

greater_succ < apply IH to H6 H4 H5.
Subgoal 2:

Variables: N1 N2
IH : forall N M, nat N -> nat M * -> greater N M -> N = s M \/
       greater N (s M)
H4 : nat N1 *
H5 : greater N2 N1
H6 : nat N2
H7 : N2 = s N1 \/ greater N2 (s N1)
============================
 s N2 = s (s N1) \/ greater (s N2) (s (s N1))

greater_succ < case H7.
Subgoal 2.1:

Variables: N1
IH : forall N M, nat N -> nat M * -> greater N M -> N = s M \/
       greater N (s M)
H4 : nat N1 *
H5 : greater (s N1) N1
H6 : nat (s N1)
============================
 s (s N1) = s (s N1) \/ greater (s (s N1)) (s (s N1))

Subgoal 2.2 is:
 s N2 = s (s N1) \/ greater (s N2) (s (s N1))

greater_succ < search.
Subgoal 2.2:

Variables: N1 N2
IH : forall N M, nat N -> nat M * -> greater N M -> N = s M \/
       greater N (s M)
H4 : nat N1 *
H5 : greater N2 N1
H6 : nat N2
H8 : greater N2 (s N1)
============================
 s N2 = s (s N1) \/ greater (s N2) (s (s N1))

greater_succ < search.
Proof completed.
Abella < Theorem less_succ : 
forall N M, nat N -> nat M -> less N M -> s N = M \/ less (s N) M.


============================
 forall N M, nat N -> nat M -> less N M -> s N = M \/ less (s N) M

less_succ < induction on 2.

IH : forall N M, nat N -> nat M * -> less N M -> s N = M \/ less (s N) M
============================
 forall N M, nat N -> nat M @ -> less N M -> s N = M \/ less (s N) M

less_succ < intros.

Variables: N M
IH : forall N M, nat N -> nat M * -> less N M -> s N = M \/ less (s N) M
H1 : nat N
H2 : nat M @
H3 : less N M
============================
 s N = M \/ less (s N) M

less_succ < case H2.
Subgoal 1:

Variables: N
IH : forall N M, nat N -> nat M * -> less N M -> s N = M \/ less (s N) M
H1 : nat N
H3 : less N z
============================
 s N = z \/ less (s N) z

Subgoal 2 is:
 s N = s N1 \/ less (s N) (s N1)

less_succ < case H3.
Subgoal 2:

Variables: N N1
IH : forall N M, nat N -> nat M * -> less N M -> s N = M \/ less (s N) M
H1 : nat N
H3 : less N (s N1)
H4 : nat N1 *
============================
 s N = s N1 \/ less (s N) (s N1)

less_succ < case H1.
Subgoal 2.1:

Variables: N1
IH : forall N M, nat N -> nat M * -> less N M -> s N = M \/ less (s N) M
H3 : less z (s N1)
H4 : nat N1 *
============================
 s z = s N1 \/ less (s z) (s N1)

Subgoal 2.2 is:
 s (s N2) = s N1 \/ less (s (s N2)) (s N1)

less_succ < case H4.
Subgoal 2.1.1:

IH : forall N M, nat N -> nat M * -> less N M -> s N = M \/ less (s N) M
H3 : less z (s z)
============================
 s z = s z \/ less (s z) (s z)

Subgoal 2.1.2 is:
 s z = s (s N2) \/ less (s z) (s (s N2))

Subgoal 2.2 is:
 s (s N2) = s N1 \/ less (s (s N2)) (s N1)

less_succ < search.
Subgoal 2.1.2:

Variables: N2
IH : forall N M, nat N -> nat M * -> less N M -> s N = M \/ less (s N) M
H3 : less z (s (s N2))
H5 : nat N2 *
============================
 s z = s (s N2) \/ less (s z) (s (s N2))

Subgoal 2.2 is:
 s (s N2) = s N1 \/ less (s (s N2)) (s N1)

less_succ < search.
Subgoal 2.2:

Variables: N1 N2
IH : forall N M, nat N -> nat M * -> less N M -> s N = M \/ less (s N) M
H3 : less (s N2) (s N1)
H4 : nat N1 *
H5 : nat N2
============================
 s (s N2) = s N1 \/ less (s (s N2)) (s N1)

less_succ < case H3.
Subgoal 2.2:

Variables: N1 N2
IH : forall N M, nat N -> nat M * -> less N M -> s N = M \/ less (s N) M
H4 : nat N1 *
H5 : nat N2
H6 : less N2 N1
============================
 s (s N2) = s N1 \/ less (s (s N2)) (s N1)

less_succ < apply IH to H5 H4 H6.
Subgoal 2.2:

Variables: N1 N2
IH : forall N M, nat N -> nat M * -> less N M -> s N = M \/ less (s N) M
H4 : nat N1 *
H5 : nat N2
H6 : less N2 N1
H7 : s N2 = N1 \/ less (s N2) N1
============================
 s (s N2) = s N1 \/ less (s (s N2)) (s N1)

less_succ < case H7.
Subgoal 2.2.1:

Variables: N2
IH : forall N M, nat N -> nat M * -> less N M -> s N = M \/ less (s N) M
H4 : nat (s N2) *
H5 : nat N2
H6 : less N2 (s N2)
============================
 s (s N2) = s (s N2) \/ less (s (s N2)) (s (s N2))

Subgoal 2.2.2 is:
 s (s N2) = s N1 \/ less (s (s N2)) (s N1)

less_succ < search.
Subgoal 2.2.2:

Variables: N1 N2
IH : forall N M, nat N -> nat M * -> less N M -> s N = M \/ less (s N) M
H4 : nat N1 *
H5 : nat N2
H6 : less N2 N1
H8 : less (s N2) N1
============================
 s (s N2) = s N1 \/ less (s (s N2)) (s N1)

less_succ < search.
Proof completed.
Abella < Theorem greater-succ : 
forall N M, greater N M -> greater (s N) M.


============================
 forall N M, greater N M -> greater (s N) M

greater-succ < induction on 1.

IH : forall N M, greater N M * -> greater (s N) M
============================
 forall N M, greater N M @ -> greater (s N) M

greater-succ < intros.

Variables: N M
IH : forall N M, greater N M * -> greater (s N) M
H1 : greater N M @
============================
 greater (s N) M

greater-succ < case H1.
Subgoal 1:

Variables: N1
IH : forall N M, greater N M * -> greater (s N) M
============================
 greater (s (s N1)) z

Subgoal 2 is:
 greater (s (s N1)) (s M1)

greater-succ < search.
Subgoal 2:

Variables: M1 N1
IH : forall N M, greater N M * -> greater (s N) M
H2 : greater N1 M1 *
============================
 greater (s (s N1)) (s M1)

greater-succ < apply IH to H2.
Subgoal 2:

Variables: M1 N1
IH : forall N M, greater N M * -> greater (s N) M
H2 : greater N1 M1 *
H3 : greater (s N1) M1
============================
 greater (s (s N1)) (s M1)

greater-succ < search.
Proof completed.
Abella < Theorem trichotomy : 
forall N, nat N -> (forall M, nat M -> greater N M \/ N = M \/ less N M).


============================
 forall N, nat N -> (forall M, nat M -> greater N M \/ N = M \/ less N M)

trichotomy < induction on 1.

IH : forall N, nat N * ->
       (forall M, nat M -> greater N M \/ N = M \/ less N M)
============================
 forall N, nat N @ -> (forall M, nat M -> greater N M \/ N = M \/ less N M)

trichotomy < intros.

Variables: N M
IH : forall N, nat N * ->
       (forall M, nat M -> greater N M \/ N = M \/ less N M)
H1 : nat N @
H2 : nat M
============================
 greater N M \/ N = M \/ less N M

trichotomy < case H1.
Subgoal 1:

Variables: M
IH : forall N, nat N * ->
       (forall M, nat M -> greater N M \/ N = M \/ less N M)
H2 : nat M
============================
 greater z M \/ z = M \/ less z M

Subgoal 2 is:
 greater (s N1) M \/ s N1 = M \/ less (s N1) M

trichotomy < case H2.
Subgoal 1.1:

IH : forall N, nat N * ->
       (forall M, nat M -> greater N M \/ N = M \/ less N M)
============================
 greater z z \/ z = z \/ less z z

Subgoal 1.2 is:
 greater z (s N1) \/ z = s N1 \/ less z (s N1)

Subgoal 2 is:
 greater (s N1) M \/ s N1 = M \/ less (s N1) M

trichotomy < search.
Subgoal 1.2:

Variables: N1
IH : forall N, nat N * ->
       (forall M, nat M -> greater N M \/ N = M \/ less N M)
H3 : nat N1
============================
 greater z (s N1) \/ z = s N1 \/ less z (s N1)

Subgoal 2 is:
 greater (s N1) M \/ s N1 = M \/ less (s N1) M

trichotomy < search.
Subgoal 2:

Variables: M N1
IH : forall N, nat N * ->
       (forall M, nat M -> greater N M \/ N = M \/ less N M)
H2 : nat M
H3 : nat N1 *
============================
 greater (s N1) M \/ s N1 = M \/ less (s N1) M

trichotomy < apply IH to H3.
Subgoal 2:

Variables: M N1
IH : forall N, nat N * ->
       (forall M, nat M -> greater N M \/ N = M \/ less N M)
H2 : nat M
H3 : nat N1 *
H4 : forall M, nat M -> greater N1 M \/ N1 = M \/ less N1 M
============================
 greater (s N1) M \/ s N1 = M \/ less (s N1) M

trichotomy < apply H4 to H2.
Subgoal 2:

Variables: M N1
IH : forall N, nat N * ->
       (forall M, nat M -> greater N M \/ N = M \/ less N M)
H2 : nat M
H3 : nat N1 *
H4 : forall M, nat M -> greater N1 M \/ N1 = M \/ less N1 M
H5 : greater N1 M \/ N1 = M \/ less N1 M
============================
 greater (s N1) M \/ s N1 = M \/ less (s N1) M

trichotomy < case H5.
Subgoal 2.1:

Variables: M N1
IH : forall N, nat N * ->
       (forall M, nat M -> greater N M \/ N = M \/ less N M)
H2 : nat M
H3 : nat N1 *
H4 : forall M, nat M -> greater N1 M \/ N1 = M \/ less N1 M
H6 : greater N1 M
============================
 greater (s N1) M \/ s N1 = M \/ less (s N1) M

Subgoal 2.2 is:
 greater (s M) M \/ s M = M \/ less (s M) M

Subgoal 2.3 is:
 greater (s N1) M \/ s N1 = M \/ less (s N1) M

trichotomy < apply greater-succ to H6.
Subgoal 2.1:

Variables: M N1
IH : forall N, nat N * ->
       (forall M, nat M -> greater N M \/ N = M \/ less N M)
H2 : nat M
H3 : nat N1 *
H4 : forall M, nat M -> greater N1 M \/ N1 = M \/ less N1 M
H6 : greater N1 M
H7 : greater (s N1) M
============================
 greater (s N1) M \/ s N1 = M \/ less (s N1) M

Subgoal 2.2 is:
 greater (s M) M \/ s M = M \/ less (s M) M

Subgoal 2.3 is:
 greater (s N1) M \/ s N1 = M \/ less (s N1) M

trichotomy < search.
Subgoal 2.2:

Variables: M
IH : forall N, nat N * ->
       (forall M, nat M -> greater N M \/ N = M \/ less N M)
H2 : nat M
H3 : nat M *
H4 : forall M1, nat M1 -> greater M M1 \/ M = M1 \/ less M M1
============================
 greater (s M) M \/ s M = M \/ less (s M) M

Subgoal 2.3 is:
 greater (s N1) M \/ s N1 = M \/ less (s N1) M

trichotomy < apply succ_greater to H2.
Subgoal 2.2:

Variables: M
IH : forall N, nat N * ->
       (forall M, nat M -> greater N M \/ N = M \/ less N M)
H2 : nat M
H3 : nat M *
H4 : forall M1, nat M1 -> greater M M1 \/ M = M1 \/ less M M1
H6 : greater (s M) M
============================
 greater (s M) M \/ s M = M \/ less (s M) M

Subgoal 2.3 is:
 greater (s N1) M \/ s N1 = M \/ less (s N1) M

trichotomy < search.
Subgoal 2.3:

Variables: M N1
IH : forall N, nat N * ->
       (forall M, nat M -> greater N M \/ N = M \/ less N M)
H2 : nat M
H3 : nat N1 *
H4 : forall M, nat M -> greater N1 M \/ N1 = M \/ less N1 M
H6 : less N1 M
============================
 greater (s N1) M \/ s N1 = M \/ less (s N1) M

trichotomy < apply less_succ to H3 H2 H6.
Subgoal 2.3:

Variables: M N1
IH : forall N, nat N * ->
       (forall M, nat M -> greater N M \/ N = M \/ less N M)
H2 : nat M
H3 : nat N1 *
H4 : forall M, nat M -> greater N1 M \/ N1 = M \/ less N1 M
H6 : less N1 M
H7 : s N1 = M \/ less (s N1) M
============================
 greater (s N1) M \/ s N1 = M \/ less (s N1) M

trichotomy < case H7.
Subgoal 2.3.1:

Variables: N1
IH : forall N, nat N * ->
       (forall M, nat M -> greater N M \/ N = M \/ less N M)
H2 : nat (s N1)
H3 : nat N1 *
H4 : forall M, nat M -> greater N1 M \/ N1 = M \/ less N1 M
H6 : less N1 (s N1)
============================
 greater (s N1) (s N1) \/ s N1 = s N1 \/ less (s N1) (s N1)

Subgoal 2.3.2 is:
 greater (s N1) M \/ s N1 = M \/ less (s N1) M

trichotomy < search.
Subgoal 2.3.2:

Variables: M N1
IH : forall N, nat N * ->
       (forall M, nat M -> greater N M \/ N = M \/ less N M)
H2 : nat M
H3 : nat N1 *
H4 : forall M, nat M -> greater N1 M \/ N1 = M \/ less N1 M
H6 : less N1 M
H8 : less (s N1) M
============================
 greater (s N1) M \/ s N1 = M \/ less (s N1) M

trichotomy < search.
Proof completed.
Abella < Theorem trichotomyA : 
forall N M, nat N -> nat M -> less N M -> N = M -> false.


============================
 forall N M, nat N -> nat M -> less N M -> N = M -> false

trichotomyA < induction on 3.

IH : forall N M, nat N -> nat M -> less N M * -> N = M -> false
============================
 forall N M, nat N -> nat M -> less N M @ -> N = M -> false

trichotomyA < intros.

Variables: N M
IH : forall N M, nat N -> nat M -> less N M * -> N = M -> false
H1 : nat N
H2 : nat M
H3 : less N M @
H4 : N = M
============================
 false

trichotomyA < case H4.

Variables: M
IH : forall N M, nat N -> nat M -> less N M * -> N = M -> false
H1 : nat M
H2 : nat M
H3 : less M M @
============================
 false

trichotomyA < case H3.

Variables: N1
IH : forall N M, nat N -> nat M -> less N M * -> N = M -> false
H1 : nat (s N1)
H2 : nat (s N1)
H5 : less N1 N1 *
============================
 false

trichotomyA < case H1.

Variables: N1
IH : forall N M, nat N -> nat M -> less N M * -> N = M -> false
H2 : nat (s N1)
H5 : less N1 N1 *
H6 : nat N1
============================
 false

trichotomyA < case H2.

Variables: N1
IH : forall N M, nat N -> nat M -> less N M * -> N = M -> false
H5 : less N1 N1 *
H6 : nat N1
H7 : nat N1
============================
 false

trichotomyA < apply IH to H6 H7 H5 _.
Proof completed.
Abella < Theorem trichotomyB : 
forall N M, nat N -> nat M -> less N M -> greater N M -> false.


============================
 forall N M, nat N -> nat M -> less N M -> greater N M -> false

trichotomyB < induction on 3.

IH : forall N M, nat N -> nat M -> less N M * -> greater N M -> false
============================
 forall N M, nat N -> nat M -> less N M @ -> greater N M -> false

trichotomyB < intros.

Variables: N M
IH : forall N M, nat N -> nat M -> less N M * -> greater N M -> false
H1 : nat N
H2 : nat M
H3 : less N M @
H4 : greater N M
============================
 false

trichotomyB < case H4.
Subgoal 1:

Variables: N1
IH : forall N M, nat N -> nat M -> less N M * -> greater N M -> false
H1 : nat (s N1)
H2 : nat z
H3 : less (s N1) z @
============================
 false

Subgoal 2 is:
 false

trichotomyB < case H3.
Subgoal 2:

Variables: M1 N1
IH : forall N M, nat N -> nat M -> less N M * -> greater N M -> false
H1 : nat (s N1)
H2 : nat (s M1)
H3 : less (s N1) (s M1) @
H5 : greater N1 M1
============================
 false

trichotomyB < case H1.
Subgoal 2:

Variables: M1 N1
IH : forall N M, nat N -> nat M -> less N M * -> greater N M -> false
H2 : nat (s M1)
H3 : less (s N1) (s M1) @
H5 : greater N1 M1
H6 : nat N1
============================
 false

trichotomyB < case H2.
Subgoal 2:

Variables: M1 N1
IH : forall N M, nat N -> nat M -> less N M * -> greater N M -> false
H3 : less (s N1) (s M1) @
H5 : greater N1 M1
H6 : nat N1
H7 : nat M1
============================
 false

trichotomyB < case H3.
Subgoal 2:

Variables: M1 N1
IH : forall N M, nat N -> nat M -> less N M * -> greater N M -> false
H5 : greater N1 M1
H6 : nat N1
H7 : nat M1
H8 : less N1 M1 *
============================
 false

trichotomyB < apply IH to H6 H7 H8 H5.
Proof completed.
Abella < Theorem trichotomyC : 
forall N M, nat N -> nat M -> greater N M -> N = M -> false.


============================
 forall N M, nat N -> nat M -> greater N M -> N = M -> false

trichotomyC < induction on 3.

IH : forall N M, nat N -> nat M -> greater N M * -> N = M -> false
============================
 forall N M, nat N -> nat M -> greater N M @ -> N = M -> false

trichotomyC < intros.

Variables: N M
IH : forall N M, nat N -> nat M -> greater N M * -> N = M -> false
H1 : nat N
H2 : nat M
H3 : greater N M @
H4 : N = M
============================
 false

trichotomyC < case H4.

Variables: M
IH : forall N M, nat N -> nat M -> greater N M * -> N = M -> false
H1 : nat M
H2 : nat M
H3 : greater M M @
============================
 false

trichotomyC < case H3.

Variables: N1
IH : forall N M, nat N -> nat M -> greater N M * -> N = M -> false
H1 : nat (s N1)
H2 : nat (s N1)
H5 : greater N1 N1 *
============================
 false

trichotomyC < case H1.

Variables: N1
IH : forall N M, nat N -> nat M -> greater N M * -> N = M -> false
H2 : nat (s N1)
H5 : greater N1 N1 *
H6 : nat N1
============================
 false

trichotomyC < case H2.

Variables: N1
IH : forall N M, nat N -> nat M -> greater N M * -> N = M -> false
H5 : greater N1 N1 *
H6 : nat N1
H7 : nat N1
============================
 false

trichotomyC < apply IH to H6 H7 H5 _.
Proof completed.
Abella < Theorem simple-three : 
forall N, less N (s (s z)) -> N = z \/ N = s z \/ N = s (s z).


============================
 forall N, less N (s (s z)) -> N = z \/ N = s z \/ N = s (s z)

simple-three < intros.

Variables: N
H1 : less N (s (s z))
============================
 N = z \/ N = s z \/ N = s (s z)

simple-three < case H1.
Subgoal 1:

============================
 z = z \/ z = s z \/ z = s (s z)

Subgoal 2 is:
 s N1 = z \/ s N1 = s z \/ s N1 = s (s z)

simple-three < search.
Subgoal 2:

Variables: N1
H2 : less N1 (s z)
============================
 s N1 = z \/ s N1 = s z \/ s N1 = s (s z)

simple-three < case H2.
Subgoal 2.1:

============================
 s z = z \/ s z = s z \/ s z = s (s z)

Subgoal 2.2 is:
 s (s N2) = z \/ s (s N2) = s z \/ s (s N2) = s (s z)

simple-three < search.
Subgoal 2.2:

Variables: N2
H3 : less N2 z
============================
 s (s N2) = z \/ s (s N2) = s z \/ s (s N2) = s (s z)

simple-three < case H3.
Proof completed.
Abella < Define lesseq : nat -> nat -> prop by 
lesseq z z;
lesseq z (s N);
lesseq (s N) (s M) := lesseq N M.

Abella < Theorem lesseq_less : 
forall N M, lesseq N M -> N = M \/ less N M.


============================
 forall N M, lesseq N M -> N = M \/ less N M

lesseq_less < induction on 1.

IH : forall N M, lesseq N M * -> N = M \/ less N M
============================
 forall N M, lesseq N M @ -> N = M \/ less N M

lesseq_less < intros.

Variables: N M
IH : forall N M, lesseq N M * -> N = M \/ less N M
H1 : lesseq N M @
============================
 N = M \/ less N M

lesseq_less < case H1.
Subgoal 1:

IH : forall N M, lesseq N M * -> N = M \/ less N M
============================
 z = z \/ less z z

Subgoal 2 is:
 z = s N1 \/ less z (s N1)

Subgoal 3 is:
 s N1 = s M1 \/ less (s N1) (s M1)

lesseq_less < search.
Subgoal 2:

Variables: N1
IH : forall N M, lesseq N M * -> N = M \/ less N M
============================
 z = s N1 \/ less z (s N1)

Subgoal 3 is:
 s N1 = s M1 \/ less (s N1) (s M1)

lesseq_less < search.
Subgoal 3:

Variables: M1 N1
IH : forall N M, lesseq N M * -> N = M \/ less N M
H2 : lesseq N1 M1 *
============================
 s N1 = s M1 \/ less (s N1) (s M1)

lesseq_less < apply IH to H2.
Subgoal 3:

Variables: M1 N1
IH : forall N M, lesseq N M * -> N = M \/ less N M
H2 : lesseq N1 M1 *
H3 : N1 = M1 \/ less N1 M1
============================
 s N1 = s M1 \/ less (s N1) (s M1)

lesseq_less < case H3.
Subgoal 3.1:

Variables: M1
IH : forall N M, lesseq N M * -> N = M \/ less N M
H2 : lesseq M1 M1 *
============================
 s M1 = s M1 \/ less (s M1) (s M1)

Subgoal 3.2 is:
 s N1 = s M1 \/ less (s N1) (s M1)

lesseq_less < search.
Subgoal 3.2:

Variables: M1 N1
IH : forall N M, lesseq N M * -> N = M \/ less N M
H2 : lesseq N1 M1 *
H4 : less N1 M1
============================
 s N1 = s M1 \/ less (s N1) (s M1)

lesseq_less < search.
Proof completed.
Abella < Theorem lesseq_eq : 
forall N, nat N -> lesseq N N.


============================
 forall N, nat N -> lesseq N N

lesseq_eq < induction on 1.

IH : forall N, nat N * -> lesseq N N
============================
 forall N, nat N @ -> lesseq N N

lesseq_eq < intros.

Variables: N
IH : forall N, nat N * -> lesseq N N
H1 : nat N @
============================
 lesseq N N

lesseq_eq < case H1.
Subgoal 1:

IH : forall N, nat N * -> lesseq N N
============================
 lesseq z z

Subgoal 2 is:
 lesseq (s N1) (s N1)

lesseq_eq < search.
Subgoal 2:

Variables: N1
IH : forall N, nat N * -> lesseq N N
H2 : nat N1 *
============================
 lesseq (s N1) (s N1)

lesseq_eq < apply IH to H2.
Subgoal 2:

Variables: N1
IH : forall N, nat N * -> lesseq N N
H2 : nat N1 *
H3 : lesseq N1 N1
============================
 lesseq (s N1) (s N1)

lesseq_eq < search.
Proof completed.
Abella < Theorem less_lesseq : 
forall N M, less N M -> lesseq N M.


============================
 forall N M, less N M -> lesseq N M

less_lesseq < induction on 1.

IH : forall N M, less N M * -> lesseq N M
============================
 forall N M, less N M @ -> lesseq N M

less_lesseq < intros.

Variables: N M
IH : forall N M, less N M * -> lesseq N M
H1 : less N M @
============================
 lesseq N M

less_lesseq < case H1.
Subgoal 1:

Variables: N1
IH : forall N M, less N M * -> lesseq N M
============================
 lesseq z (s N1)

Subgoal 2 is:
 lesseq (s N1) (s M1)

less_lesseq < search.
Subgoal 2:

Variables: M1 N1
IH : forall N M, less N M * -> lesseq N M
H2 : less N1 M1 *
============================
 lesseq (s N1) (s M1)

less_lesseq < apply IH to H2.
Subgoal 2:

Variables: M1 N1
IH : forall N M, less N M * -> lesseq N M
H2 : less N1 M1 *
H3 : lesseq N1 M1
============================
 lesseq (s N1) (s M1)

less_lesseq < search.
Proof completed.
Abella < Theorem lesseq_trans : 
forall N M P, lesseq N M -> lesseq M P -> lesseq N P.


============================
 forall N M P, lesseq N M -> lesseq M P -> lesseq N P

lesseq_trans < induction on 1.

IH : forall N M P, lesseq N M * -> lesseq M P -> lesseq N P
============================
 forall N M P, lesseq N M @ -> lesseq M P -> lesseq N P

lesseq_trans < intros.

Variables: N M P
IH : forall N M P, lesseq N M * -> lesseq M P -> lesseq N P
H1 : lesseq N M @
H2 : lesseq M P
============================
 lesseq N P

lesseq_trans < case H1.
Subgoal 1:

Variables: P
IH : forall N M P, lesseq N M * -> lesseq M P -> lesseq N P
H2 : lesseq z P
============================
 lesseq z P

Subgoal 2 is:
 lesseq z P

Subgoal 3 is:
 lesseq (s N1) P

lesseq_trans < search.
Subgoal 2:

Variables: P N1
IH : forall N M P, lesseq N M * -> lesseq M P -> lesseq N P
H2 : lesseq (s N1) P
============================
 lesseq z P

Subgoal 3 is:
 lesseq (s N1) P

lesseq_trans < case H2.
Subgoal 2:

Variables: N1 M1
IH : forall N M P, lesseq N M * -> lesseq M P -> lesseq N P
H3 : lesseq N1 M1
============================
 lesseq z (s M1)

Subgoal 3 is:
 lesseq (s N1) P

lesseq_trans < search.
Subgoal 3:

Variables: P M1 N1
IH : forall N M P, lesseq N M * -> lesseq M P -> lesseq N P
H2 : lesseq (s M1) P
H3 : lesseq N1 M1 *
============================
 lesseq (s N1) P

lesseq_trans < case H2.
Subgoal 3:

Variables: M1 N1 M2
IH : forall N M P, lesseq N M * -> lesseq M P -> lesseq N P
H3 : lesseq N1 M1 *
H4 : lesseq M1 M2
============================
 lesseq (s N1) (s M2)

lesseq_trans < apply IH to H3 H4.
Subgoal 3:

Variables: M1 N1 M2
IH : forall N M P, lesseq N M * -> lesseq M P -> lesseq N P
H3 : lesseq N1 M1 *
H4 : lesseq M1 M2
H5 : lesseq N1 M2
============================
 lesseq (s N1) (s M2)

lesseq_trans < search.
Proof completed.
Abella < Theorem less_trans : 
forall N M P, less N M -> less M P -> less N P.


============================
 forall N M P, less N M -> less M P -> less N P

less_trans < induction on 2.

IH : forall N M P, less N M -> less M P * -> less N P
============================
 forall N M P, less N M -> less M P @ -> less N P

less_trans < intros.

Variables: N M P
IH : forall N M P, less N M -> less M P * -> less N P
H1 : less N M
H2 : less M P @
============================
 less N P

less_trans < case H2.
Subgoal 1:

Variables: N N1
IH : forall N M P, less N M -> less M P * -> less N P
H1 : less N z
============================
 less N (s N1)

Subgoal 2 is:
 less N (s M1)

less_trans < case H1.
Subgoal 2:

Variables: N M1 N1
IH : forall N M P, less N M -> less M P * -> less N P
H1 : less N (s N1)
H3 : less N1 M1 *
============================
 less N (s M1)

less_trans < case H1.
Subgoal 2.1:

Variables: M1 N1
IH : forall N M P, less N M -> less M P * -> less N P
H3 : less N1 M1 *
============================
 less z (s M1)

Subgoal 2.2 is:
 less (s N2) (s M1)

less_trans < search.
Subgoal 2.2:

Variables: M1 N1 N2
IH : forall N M P, less N M -> less M P * -> less N P
H3 : less N1 M1 *
H4 : less N2 N1
============================
 less (s N2) (s M1)

less_trans < apply IH to H4 H3.
Subgoal 2.2:

Variables: M1 N1 N2
IH : forall N M P, less N M -> less M P * -> less N P
H3 : less N1 M1 *
H4 : less N2 N1
H5 : less N2 M1
============================
 less (s N2) (s M1)

less_trans < search.
Proof completed.
Abella < Theorem lesseq_type : 
forall N M, lesseq N M -> nat N.


============================
 forall N M, lesseq N M -> nat N

lesseq_type < induction on 1.

IH : forall N M, lesseq N M * -> nat N
============================
 forall N M, lesseq N M @ -> nat N

lesseq_type < intros.

Variables: N M
IH : forall N M, lesseq N M * -> nat N
H1 : lesseq N M @
============================
 nat N

lesseq_type < case H1.
Subgoal 1:

IH : forall N M, lesseq N M * -> nat N
============================
 nat z

Subgoal 2 is:
 nat z

Subgoal 3 is:
 nat (s N1)

lesseq_type < search.
Subgoal 2:

Variables: N1
IH : forall N M, lesseq N M * -> nat N
============================
 nat z

Subgoal 3 is:
 nat (s N1)

lesseq_type < search.
Subgoal 3:

Variables: M1 N1
IH : forall N M, lesseq N M * -> nat N
H2 : lesseq N1 M1 *
============================
 nat (s N1)

lesseq_type < apply IH to H2.
Subgoal 3:

Variables: M1 N1
IH : forall N M, lesseq N M * -> nat N
H2 : lesseq N1 M1 *
H3 : nat N1
============================
 nat (s N1)

lesseq_type < search.
Proof completed.
Abella < Theorem lesseq_succ : 
forall N M, lesseq N M -> lesseq N (s M).


============================
 forall N M, lesseq N M -> lesseq N (s M)

lesseq_succ < induction on 1.

IH : forall N M, lesseq N M * -> lesseq N (s M)
============================
 forall N M, lesseq N M @ -> lesseq N (s M)

lesseq_succ < intros.

Variables: N M
IH : forall N M, lesseq N M * -> lesseq N (s M)
H1 : lesseq N M @
============================
 lesseq N (s M)

lesseq_succ < case H1.
Subgoal 1:

IH : forall N M, lesseq N M * -> lesseq N (s M)
============================
 lesseq z (s z)

Subgoal 2 is:
 lesseq z (s (s N1))

Subgoal 3 is:
 lesseq (s N1) (s (s M1))

lesseq_succ < search.
Subgoal 2:

Variables: N1
IH : forall N M, lesseq N M * -> lesseq N (s M)
============================
 lesseq z (s (s N1))

Subgoal 3 is:
 lesseq (s N1) (s (s M1))

lesseq_succ < search.
Subgoal 3:

Variables: M1 N1
IH : forall N M, lesseq N M * -> lesseq N (s M)
H2 : lesseq N1 M1 *
============================
 lesseq (s N1) (s (s M1))

lesseq_succ < apply IH to H2.
Subgoal 3:

Variables: M1 N1
IH : forall N M, lesseq N M * -> lesseq N (s M)
H2 : lesseq N1 M1 *
H3 : lesseq N1 (s M1)
============================
 lesseq (s N1) (s (s M1))

lesseq_succ < search.
Proof completed.
Abella < Define maximum : nat -> nat -> nat -> prop by 
maximum A B A := lesseq B A;
maximum A B B := less A B.

Abella < Theorem maximum_total : 
forall A B, nat A -> nat B -> (exists C, nat C /\ maximum A B C).


============================
 forall A B, nat A -> nat B -> (exists C, nat C /\ maximum A B C)

maximum_total < intros.

Variables: A B
H1 : nat A
H2 : nat B
============================
 exists C, nat C /\ maximum A B C

maximum_total < apply trichotomy to H1.

Variables: A B
H1 : nat A
H2 : nat B
H3 : forall M, nat M -> greater A M \/ A = M \/ less A M
============================
 exists C, nat C /\ maximum A B C

maximum_total < apply H3 to H2.

Variables: A B
H1 : nat A
H2 : nat B
H3 : forall M, nat M -> greater A M \/ A = M \/ less A M
H4 : greater A B \/ A = B \/ less A B
============================
 exists C, nat C /\ maximum A B C

maximum_total < case H4.
Subgoal 1:

Variables: A B
H1 : nat A
H2 : nat B
H3 : forall M, nat M -> greater A M \/ A = M \/ less A M
H5 : greater A B
============================
 exists C, nat C /\ maximum A B C

Subgoal 2 is:
 exists C, nat C /\ maximum B B C

Subgoal 3 is:
 exists C, nat C /\ maximum A B C

maximum_total < witness A.
Subgoal 1:

Variables: A B
H1 : nat A
H2 : nat B
H3 : forall M, nat M -> greater A M \/ A = M \/ less A M
H5 : greater A B
============================
 nat A /\ maximum A B A

Subgoal 2 is:
 exists C, nat C /\ maximum B B C

Subgoal 3 is:
 exists C, nat C /\ maximum A B C

maximum_total < split.
Subgoal 1.1:

Variables: A B
H1 : nat A
H2 : nat B
H3 : forall M, nat M -> greater A M \/ A = M \/ less A M
H5 : greater A B
============================
 nat A

Subgoal 1.2 is:
 maximum A B A

Subgoal 2 is:
 exists C, nat C /\ maximum B B C

Subgoal 3 is:
 exists C, nat C /\ maximum A B C

maximum_total < search.
Subgoal 1.2:

Variables: A B
H1 : nat A
H2 : nat B
H3 : forall M, nat M -> greater A M \/ A = M \/ less A M
H5 : greater A B
============================
 maximum A B A

Subgoal 2 is:
 exists C, nat C /\ maximum B B C

Subgoal 3 is:
 exists C, nat C /\ maximum A B C

maximum_total < unfold.
Subgoal 1.2:

Variables: A B
H1 : nat A
H2 : nat B
H3 : forall M, nat M -> greater A M \/ A = M \/ less A M
H5 : greater A B
============================
 lesseq B A

Subgoal 2 is:
 exists C, nat C /\ maximum B B C

Subgoal 3 is:
 exists C, nat C /\ maximum A B C

maximum_total < apply greater_less to H5.
Subgoal 1.2:

Variables: A B
H1 : nat A
H2 : nat B
H3 : forall M, nat M -> greater A M \/ A = M \/ less A M
H5 : greater A B
H6 : less B A
============================
 lesseq B A

Subgoal 2 is:
 exists C, nat C /\ maximum B B C

Subgoal 3 is:
 exists C, nat C /\ maximum A B C

maximum_total < apply less_lesseq to H6.
Subgoal 1.2:

Variables: A B
H1 : nat A
H2 : nat B
H3 : forall M, nat M -> greater A M \/ A = M \/ less A M
H5 : greater A B
H6 : less B A
H7 : lesseq B A
============================
 lesseq B A

Subgoal 2 is:
 exists C, nat C /\ maximum B B C

Subgoal 3 is:
 exists C, nat C /\ maximum A B C

maximum_total < search.
Subgoal 2:

Variables: B
H1 : nat B
H2 : nat B
H3 : forall M, nat M -> greater B M \/ B = M \/ less B M
============================
 exists C, nat C /\ maximum B B C

Subgoal 3 is:
 exists C, nat C /\ maximum A B C

maximum_total < witness B.
Subgoal 2:

Variables: B
H1 : nat B
H2 : nat B
H3 : forall M, nat M -> greater B M \/ B = M \/ less B M
============================
 nat B /\ maximum B B B

Subgoal 3 is:
 exists C, nat C /\ maximum A B C

maximum_total < split.
Subgoal 2.1:

Variables: B
H1 : nat B
H2 : nat B
H3 : forall M, nat M -> greater B M \/ B = M \/ less B M
============================
 nat B

Subgoal 2.2 is:
 maximum B B B

Subgoal 3 is:
 exists C, nat C /\ maximum A B C

maximum_total < search.
Subgoal 2.2:

Variables: B
H1 : nat B
H2 : nat B
H3 : forall M, nat M -> greater B M \/ B = M \/ less B M
============================
 maximum B B B

Subgoal 3 is:
 exists C, nat C /\ maximum A B C

maximum_total < unfold.
Subgoal 2.2:

Variables: B
H1 : nat B
H2 : nat B
H3 : forall M, nat M -> greater B M \/ B = M \/ less B M
============================
 lesseq B B

Subgoal 3 is:
 exists C, nat C /\ maximum A B C

maximum_total < apply lesseq_eq to H2.
Subgoal 2.2:

Variables: B
H1 : nat B
H2 : nat B
H3 : forall M, nat M -> greater B M \/ B = M \/ less B M
H5 : lesseq B B
============================
 lesseq B B

Subgoal 3 is:
 exists C, nat C /\ maximum A B C

maximum_total < search.
Subgoal 3:

Variables: A B
H1 : nat A
H2 : nat B
H3 : forall M, nat M -> greater A M \/ A = M \/ less A M
H5 : less A B
============================
 exists C, nat C /\ maximum A B C

maximum_total < witness B.
Subgoal 3:

Variables: A B
H1 : nat A
H2 : nat B
H3 : forall M, nat M -> greater A M \/ A = M \/ less A M
H5 : less A B
============================
 nat B /\ maximum A B B

maximum_total < split.
Subgoal 3.1:

Variables: A B
H1 : nat A
H2 : nat B
H3 : forall M, nat M -> greater A M \/ A = M \/ less A M
H5 : less A B
============================
 nat B

Subgoal 3.2 is:
 maximum A B B

maximum_total < search.
Subgoal 3.2:

Variables: A B
H1 : nat A
H2 : nat B
H3 : forall M, nat M -> greater A M \/ A = M \/ less A M
H5 : less A B
============================
 maximum A B B

maximum_total < unfold.
Subgoal 3.2:

Variables: A B
H1 : nat A
H2 : nat B
H3 : forall M, nat M -> greater A M \/ A = M \/ less A M
H5 : less A B
============================
 less A B

maximum_total < search.
Proof completed.
Abella < Theorem less_lesseq_not : 
forall A B, less A B -> lesseq B A -> false.


============================
 forall A B, less A B -> lesseq B A -> false

less_lesseq_not < induction on 1.

IH : forall A B, less A B * -> lesseq B A -> false
============================
 forall A B, less A B @ -> lesseq B A -> false

less_lesseq_not < intros.

Variables: A B
IH : forall A B, less A B * -> lesseq B A -> false
H1 : less A B @
H2 : lesseq B A
============================
 false

less_lesseq_not < case H1.
Subgoal 1:

Variables: N
IH : forall A B, less A B * -> lesseq B A -> false
H2 : lesseq (s N) z
============================
 false

Subgoal 2 is:
 false

less_lesseq_not < case H2.
Subgoal 2:

Variables: M N
IH : forall A B, less A B * -> lesseq B A -> false
H2 : lesseq (s M) (s N)
H3 : less N M *
============================
 false

less_lesseq_not < case H2.
Subgoal 2:

Variables: M N
IH : forall A B, less A B * -> lesseq B A -> false
H3 : less N M *
H4 : lesseq M N
============================
 false

less_lesseq_not < apply IH to H3 H4.
Proof completed.
Abella < Theorem maximum_determinate : 
forall A B, nat A -> nat B ->
  (forall C1 C2, maximum A B C1 -> maximum A B C2 -> C1 = C2).


============================
 forall A B, nat A -> nat B ->
   (forall C1 C2, maximum A B C1 -> maximum A B C2 -> C1 = C2)

maximum_determinate < intros.

Variables: A B C1 C2
H1 : nat A
H2 : nat B
H3 : maximum A B C1
H4 : maximum A B C2
============================
 C1 = C2

maximum_determinate < case H3.
Subgoal 1:

Variables: B C1 C2
H1 : nat C1
H2 : nat B
H4 : maximum C1 B C2
H5 : lesseq B C1
============================
 C1 = C2

Subgoal 2 is:
 C1 = C2

maximum_determinate < case H4.
Subgoal 1.1:

Variables: B C2
H1 : nat C2
H2 : nat B
H5 : lesseq B C2
H6 : lesseq B C2
============================
 C2 = C2

Subgoal 1.2 is:
 C1 = C2

Subgoal 2 is:
 C1 = C2

maximum_determinate < search.
Subgoal 1.2:

Variables: C1 C2
H1 : nat C1
H2 : nat C2
H5 : lesseq C2 C1
H6 : less C1 C2
============================
 C1 = C2

Subgoal 2 is:
 C1 = C2

maximum_determinate < apply less_lesseq_not to H6 H5.
Subgoal 2:

Variables: A C1 C2
H1 : nat A
H2 : nat C1
H4 : maximum A C1 C2
H5 : less A C1
============================
 C1 = C2

maximum_determinate < case H4.
Subgoal 2.1:

Variables: C1 C2
H1 : nat C2
H2 : nat C1
H5 : less C2 C1
H6 : lesseq C1 C2
============================
 C1 = C2

Subgoal 2.2 is:
 C2 = C2

maximum_determinate < apply less_lesseq_not to H5 H6.
Subgoal 2.2:

Variables: A C2
H1 : nat A
H2 : nat C2
H5 : less A C2
H6 : less A C2
============================
 C2 = C2

maximum_determinate < search.
Proof completed.
Abella < Theorem maximum_assoc : 
forall A B C AB, maximum A B AB ->
  (forall BC, maximum B C BC ->
       (forall ABC, maximum AB C ABC -> maximum A BC ABC)).


============================
 forall A B C AB, maximum A B AB ->
   (forall BC, maximum B C BC ->
        (forall ABC, maximum AB C ABC -> maximum A BC ABC))

maximum_assoc < intros.

Variables: A B C AB BC ABC
H1 : maximum A B AB
H2 : maximum B C BC
H3 : maximum AB C ABC
============================
 maximum A BC ABC

maximum_assoc < case H1.
Subgoal 1:

Variables: B C AB BC ABC
H2 : maximum B C BC
H3 : maximum AB C ABC
H4 : lesseq B AB
============================
 maximum AB BC ABC

Subgoal 2 is:
 maximum A BC ABC

maximum_assoc < case H2.
Subgoal 1.1:

Variables: C AB BC ABC
H3 : maximum AB C ABC
H4 : lesseq BC AB
H5 : lesseq C BC
============================
 maximum AB BC ABC

Subgoal 1.2 is:
 maximum AB BC ABC

Subgoal 2 is:
 maximum A BC ABC

maximum_assoc < case H3.
Subgoal 1.1.1:

Variables: C BC ABC
H4 : lesseq BC ABC
H5 : lesseq C BC
H6 : lesseq C ABC
============================
 maximum ABC BC ABC

Subgoal 1.1.2 is:
 maximum AB BC ABC

Subgoal 1.2 is:
 maximum AB BC ABC

Subgoal 2 is:
 maximum A BC ABC

maximum_assoc < apply lesseq_trans to H5 H4.
Subgoal 1.1.1:

Variables: C BC ABC
H4 : lesseq BC ABC
H5 : lesseq C BC
H6 : lesseq C ABC
H7 : lesseq C ABC
============================
 maximum ABC BC ABC

Subgoal 1.1.2 is:
 maximum AB BC ABC

Subgoal 1.2 is:
 maximum AB BC ABC

Subgoal 2 is:
 maximum A BC ABC

maximum_assoc < unfold.
Subgoal 1.1.1:

Variables: C BC ABC
H4 : lesseq BC ABC
H5 : lesseq C BC
H6 : lesseq C ABC
H7 : lesseq C ABC
============================
 lesseq BC ABC

Subgoal 1.1.2 is:
 maximum AB BC ABC

Subgoal 1.2 is:
 maximum AB BC ABC

Subgoal 2 is:
 maximum A BC ABC

maximum_assoc < search.
Subgoal 1.1.2:

Variables: AB BC ABC
H4 : lesseq BC AB
H5 : lesseq ABC BC
H6 : less AB ABC
============================
 maximum AB BC ABC

Subgoal 1.2 is:
 maximum AB BC ABC

Subgoal 2 is:
 maximum A BC ABC

maximum_assoc < apply lesseq_trans to H5 H4.
Subgoal 1.1.2:

Variables: AB BC ABC
H4 : lesseq BC AB
H5 : lesseq ABC BC
H6 : less AB ABC
H7 : lesseq ABC AB
============================
 maximum AB BC ABC

Subgoal 1.2 is:
 maximum AB BC ABC

Subgoal 2 is:
 maximum A BC ABC

maximum_assoc < apply less_lesseq_not to H6 H7.
Subgoal 1.2:

Variables: B AB BC ABC
H3 : maximum AB BC ABC
H4 : lesseq B AB
H5 : less B BC
============================
 maximum AB BC ABC

Subgoal 2 is:
 maximum A BC ABC

maximum_assoc < case H3.
Subgoal 1.2.1:

Variables: B BC ABC
H4 : lesseq B ABC
H5 : less B BC
H6 : lesseq BC ABC
============================
 maximum ABC BC ABC

Subgoal 1.2.2 is:
 maximum AB ABC ABC

Subgoal 2 is:
 maximum A BC ABC

maximum_assoc < search.
Subgoal 1.2.2:

Variables: B AB ABC
H4 : lesseq B AB
H5 : less B ABC
H6 : less AB ABC
============================
 maximum AB ABC ABC

Subgoal 2 is:
 maximum A BC ABC

maximum_assoc < search.
Subgoal 2:

Variables: A C AB BC ABC
H2 : maximum AB C BC
H3 : maximum AB C ABC
H4 : less A AB
============================
 maximum A BC ABC

maximum_assoc < case H2.
Subgoal 2.1:

Variables: A C BC ABC
H3 : maximum BC C ABC
H4 : less A BC
H5 : lesseq C BC
============================
 maximum A BC ABC

Subgoal 2.2 is:
 maximum A BC ABC

maximum_assoc < case H3.
Subgoal 2.1.1:

Variables: A C ABC
H4 : less A ABC
H5 : lesseq C ABC
H6 : lesseq C ABC
============================
 maximum A ABC ABC

Subgoal 2.1.2 is:
 maximum A BC ABC

Subgoal 2.2 is:
 maximum A BC ABC

maximum_assoc < search.
Subgoal 2.1.2:

Variables: A BC ABC
H4 : less A BC
H5 : lesseq ABC BC
H6 : less BC ABC
============================
 maximum A BC ABC

Subgoal 2.2 is:
 maximum A BC ABC

maximum_assoc < apply less_trans to H4 H6.
Subgoal 2.1.2:

Variables: A BC ABC
H4 : less A BC
H5 : lesseq ABC BC
H6 : less BC ABC
H7 : less A ABC
============================
 maximum A BC ABC

Subgoal 2.2 is:
 maximum A BC ABC

maximum_assoc < apply less_lesseq_not to H6 H5.
Subgoal 2.2:

Variables: A AB BC ABC
H3 : maximum AB BC ABC
H4 : less A AB
H5 : less AB BC
============================
 maximum A BC ABC

maximum_assoc < case H3.
Subgoal 2.2.1:

Variables: A BC ABC
H4 : less A ABC
H5 : less ABC BC
H6 : lesseq BC ABC
============================
 maximum A BC ABC

Subgoal 2.2.2 is:
 maximum A ABC ABC

maximum_assoc < apply less_lesseq_not to H5 H6.
Subgoal 2.2.2:

Variables: A AB ABC
H4 : less A AB
H5 : less AB ABC
H6 : less AB ABC
============================
 maximum A ABC ABC

maximum_assoc < apply less_trans to H4 H5.
Subgoal 2.2.2:

Variables: A AB ABC
H4 : less A AB
H5 : less AB ABC
H6 : less AB ABC
H7 : less A ABC
============================
 maximum A ABC ABC

maximum_assoc < search.
Proof completed.
Abella < 